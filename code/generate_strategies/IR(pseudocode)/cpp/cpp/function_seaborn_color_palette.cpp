#include <string>
#include <vector>
#include <tuple>
#include <boost/format.hpp>
#include <regex>
class SeabornColorPalette {
public:
    std::string generate_palette(const std::string& palette_name = "deep", int n_colors = 6) {
        if (n_colors <= 0) {
            return "[]";
        }

        
        std::vector<std::tuple<double, double, double>> base_colors;
        
        if (palette_name == "deep") {
            base_colors = {
                {0.2980392156862745, 0.4470588235294118, 0.6901960784313725},
                {0.8666666666666667, 0.5176470588235295, 0.3215686274509804},
                {0.3333333333333333, 0.6588235294117647, 0.40784313725490196},
                {0.7686274509803922, 0.3058823529411765, 0.3215686274509804},
                {0.5058823529411764, 0.4470588235294118, 0.7019607843137254},
                {0.5764705882352941, 0.47058823529411764, 0.3764705882352941}
            };
        }
        else if (palette_name == "bright") {
            base_colors = {
                {0.4, 0.7607843137254902, 0.6470588235294118},
                {0.9882352941176471, 0.5529411764705883, 0.3843137254901961},
                {0.5529411764705883, 0.6274509803921569, 0.796078431372549},
                {0.9058823529411765, 0.5411764705882353, 0.7647058823529411},
                {0.6509803921568628, 0.8470588235294118, 0.32941176470588235},
                {1.0, 0.8509803921568627, 0.1843137254901961}
            };
        }
        else if (palette_name == "colorblind") {
            base_colors = {
                {0.0, 0.4470588235294118, 0.6980392156862745},
                {0.9294117647058824, 0.10980392156862745, 0.14901960784313725},
                {0.0, 0.6196078431372549, 0.45098039215686275},
                {0.8352941176470589, 0.3686274509803922, 0.0},
                {0.8, 0.4745098039215686, 0.6549019607843137},
                {0.9411764705882353, 0.8941176470588236, 0.25882352941176473},
                {0.3372549019607843, 0.7058823529411765, 0.9137254901960784}
            };
        }
        else if (palette_name == "muted") {
            base_colors = {
                {0.2823529411764706, 0.4705882352941176, 0.6352941176470588},
                {0.7372549019607844, 0.5411764705882353, 0.41568627450980394},
                {0.5843137254901961, 0.6470588235294118, 0.3215686274509804},
                {0.7529411764705882, 0.37254901960784315, 0.43137254901960786},
                {0.5058823529411764, 0.4470588235294118, 0.6980392156862745},
                {0.8, 0.7254901960784313, 0.4549019607843137}
            };
        }
        else {  
            return generate_palette("deep", n_colors);
        }

        
        std::vector<std::tuple<double, double, double>> palette;
        for (int i = 0; i < n_colors; ++i) {
            palette.push_back(base_colors[i % base_colors.size()]);
        }

        
        std::stringstream ss;
        ss << "[";
        for (size_t i = 0; i < palette.size(); ++i) {
            auto [r, g, b] = palette[i];
            ss << "(" << r << ", " << g << ", " << b << ")";
            if (i < palette.size() - 1) {
                ss << ", ";
            }
        }
        ss << "]";
        return ss.str();
    }
};